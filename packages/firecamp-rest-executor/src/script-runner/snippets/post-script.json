[
  {
    "id": "post_script",
    "name": "Post script",
    "helps": [
      {
        "id": "response",
        "name": "Response",
        "helpPayloads": [
          {
            "id": "filter_response_body",
            "title": "Filter response body (When data type: json)",
            "snippet": "response.getResponseBody();",
            "example": "// API: GET https://jsonplaceholder.typicode.com/posts\nlet response_data = response.getResponseBody();\n\ntry {\n  response_data = \n    typeof response_data === \"string\" \n    ? JSON.parse(response_data).slice(0, 3)\n    : response_data;\n} catch (error) {\n  console.log(\"Invalid string found\", error.message);\n}\n\nresponse.setResponseBody(response_data);"
          },
          {
            "id": "get_status",
            "title": "Get status",
            "snippet": "response.getStatus();",
            "example": "// API: GET https://jsonplaceholder.typicode.com/posts\nlet response_data = response.getResponseBody();\n\ntry {\n  response_data = \n    typeof response_data === \"string\" \n    ? JSON.parse(response_data).slice(0, 3)\n    : response_data;\n} catch (error) {\n  console.log(\"Invalid string found\", error.message);\n}\n\nif (response.getStatus() === 200)\n  response.setResponseBody(response_data);"
          },
          {
            "id": "get_response_body",
            "title": "Get response body",
            "snippet": "response.getResponseBody();",
            "example": "let response_data = response.getResponseBody();\n\ntry {\n  response_data = \n    typeof response_data === \"string\" \n    ? JSON.parse(response_data)\n    : response_data;\n} catch (error) {\n  console.log(\"Invalid string found\", error.message);\n}\n\nif (\n  response.getStatus() === 200 &&\n  response_data.hasOwnProperty(\"token\") &&\n  typeof response_data.token === \"string\" &&\n  response_data.token.length > 0\n  )\n  env.workspace.setVariable(\"token\", response_data.token);"
          },
          {
            "id": "get_response_body_in_json",
            "title": "Get response body in JSON",
            "snippet": "response.getResponseBodyInJSON();",
            "example": "let response_data = response.getResponseBodyInJSON();\n\nif (\n  response.getStatus() === 200 &&\n  response_data.hasOwnProperty(\"token\") &&\n  typeof response_data.token === \"string\" &&\n  response_data.token.length > 0\n  )\n  env.workspace.setVariable(\"token\", response_data.token);"
          },
          {
            "id": "get_single_header",
            "title": "Get single header",
            "snippet": "response.getHeader(\"header_name\");",
            "example": "// API: https://jsonplaceholder.typicode.com/posts\n\nlet contentType = response.getHeader(\"content-type\");\n\nconsole.log(\"Content-Type: \", contentType);\n\n// Response\n\n// Content- Type: application/json; charset=utf-8"
          },
          {
            "id": "get_multiple_headers",
            "title": "Get multiple headers",
            "snippet": "response.getHeaders(\"header_name1\", \"header_name2\",...);",
            "example": "// API: https://jsonplaceholder.typicode.com/posts\n\nlet headers = response.getHeaders(\"content-type\", \"age\");\n\nconsole.log(\"Headers: \", headers);\n\n// Response\n\n// Headers: {\n//  \"content-type\": \"application/json; charset=utf-8\",\n//  \"age\": \"2828\"\n// }"
          },
          {
            "id": "get_duration",
            "title": "Get duration",
            "snippet": "response.getDuration();",
            "example": "// API: https://jsonplaceholder.typicode.com/posts\n\nconsole.log(response.getDuration());\n\n// Response: Number"
          }
        ]
      },
      {
        "id": "environment",
        "name": "Environment",
        "helpPayloads": [
          {
            "id": "get_single_variable",
            "title": "Get single variable",
            "snippet": "env.getVariable(\"var_name\");",
            "example": "env.getVariable(\"host\");"
          },
          {
            "id": "get_multiple_variables",
            "title": "Get multiple variables",
            "snippet": "env.getVariables(\"var1_name\", \"var2_name\", ...);",
            "example": "env.getVariables(\"host\", \"port_number\", ...);"
          },
          {
            "id": "set_collection_single_variable",
            "title": "Set collection single variable",
            "snippet": "env.collection.setVariable(\"var_name\", \"var_value\");",
            "example": "env.collection.setVariable(\"host\", \"localhost\");"
          },
          {
            "id": "set_collection_multiple_variables",
            "title": "Set collection multiple variables",
            "snippet": "env.collection.setVariables({ object });",
            "example": "env.collection.setVariables({\n  host: \"localhost\",\n  port: \"3000\"\n});"
          },
          {
            "id": "unset_collection_single_or_multiple_variables",
            "title": "Unset collection single/multiple variables",
            "snippet": "env.collection.unsetVariables(\"var1_name\", \"var2_name\", ...);",
            "example": "env.collection.unsetVariables(\"port\", \"host\");"
          },
          {
            "id": "set_workspace_single_variable",
            "title": "Set workspace single variable",
            "snippet": "env.workspace.setVariable(\"var_name\", \"var_value\");",
            "example": "env.workspace.setVariable(\"host\", \"localhost\");"
          },
          {
            "id": "set_workspace_multiple_variables",
            "title": "Set workspace multiple variables",
            "snippet": "env.workspace.setVariables({ object });",
            "example": "env.workspace.setVariables({\n  host: \"localhost\",\n  port: \"3000\"\n});"
          },
          {
            "id": "unset_workspace_single_or_multiple_variables",
            "title": "Unset workspace single/multiple variables",
            "snippet": "env.workspace.unsetVariables(\"var1_name\", \"var2_name\", ...);",
            "example": "env.workspace.unsetVariables(\"port\", \"host\");"
          }
        ]
      }
    ]
  }
]

interface Request {
  /**
   * request URL
   */
  url: IUrl;

  /**
   * request headers
   */
  headers: IHeader[];

  /**
   * HTTP method
   */
  method: EHttpMethod | string;

  /**
   * request body
   */
  body: IRestBody;

  /**
   * add the new header or update the existing header
   */
  addHeader: (headerName: string, headerValue: string) => void;

  /**
   * update the existing header
   */
  updateHeader: (headerName: string, headerValue: string) => void;

  /**
   * return the header value
   */
  getHeader: (headerName: string) => string;

  /**
   * returns a js object, { [headerName]: headerValue,... }
   */
  getHeaders: () => { [key: string]: string };

  /**
   * remove the header
   */
  removeHeader: (...headerNames: string[]) => void;

  /**
   * set the new query or update the existing query
   */
  addQueryParam: (queryName: string, queryValue: string) => void;

  /**
   * update the existing query
   */
  updateQueryParam: (queryName: string, queryValue: string) => void;

  /**
   * return the query value
   */
  getQueryParam: (queryName: string) => string | undefined;

  /**
   * remove the query
   */
  removeQueryParam: (...queryNames: string[]) => void;

  /**
   * returns a js object, { [queryName]: queryValue,... }
   */
  getQueries: () => { [key: string]: string };
}

interface Response {}

interface Variables {
  get: (key: string)=> any,
  set: (key: string, value: string)=> void,
  unset: (key: string)=> void,
  clear: (key: string)=> void,
}

type Test = (testName: string, specFun: Function)=> void;

interface Firecamp {
  request: Request;
  response: Response;
  /** @deprecated: The cookies method is not implemented yet*/
  cookies: any;
  variables: Variables;
  globals: Variables;
  environment: Variables;
  collectionVariables: Variables

  test: Test;
  expect: any;
}

declare var fc: Firecamp

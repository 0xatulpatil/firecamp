[
  {
    "id": "pre_script",
    "name": "Pre script",
    "helps": [
      {
        "id": "url",
        "name": "URL",
        "helpPayloads": [
          {
            "id": "set_url_via_raw_string",
            "title": "Set URL via raw string",
            "snippet": "request.setURL(\"raw_string\");",
            "example": "request.setURL(\"https://jsonplaceholder.typicode.com/posts\");"
          },
          {
            "id": "set_url_via_object",
            "title": "Set URL via object",
            "snippet": "request.setURL({ url_object });",
            "example": "request.setURL({\n  href: \"https://jsonplaceholder.typicode.com/posts\",\n  protocol: \"https:\",\n  username: \"\",\n  password: \"\",\n  host: \"jsonplaceholder.typicode.com\",\n  hostname: \"jsonplaceholder.typicode.com\",\n  port: \"\",\n  pathname: \"/posts\"\n});"
          }
        ]
      },
      {
        "id": "method",
        "name": "Method",
        "helpPayloads": [
          {
            "id": "set_method",
            "title": "Set Method",
            "snippet": "request.setMethod(\"method_name\");",
            "example": "request.setMethod(\"Post\");"
          }
        ]
      },
      {
        "id": "headers",
        "name": "Headers",
        "helpPayloads": [
          {
            "id": "set_single_header",
            "title": "Set single header",
            "snippet": "request.setHeader(\"header_name\", \"header_value\");",
            "example": "request.setHeader(\"Authorization\", \"Bearer daf432cecwqfddf\");"
          },
          {
            "id": "set_multiple_headers",
            "title": "Set multiple headers",
            "snippet": "request.setHeaders({ headers_object });",
            "example": "request.setHeaders({\n  \"Authorization\": \"Bearer daf432cecwqfddf\",\n  \"Content-Type\": \"application/json\"\n});"
          },
          {
            "id": "unset_multiple_or_single_header",
            "title": "Unset single/multiple headers",
            "snippet": "request.unsetHeaders(\"header_name1\", \"header_name2\",...);",
            "example": "request.unsetHeaders(\"Authorization\", \"Content-Type\");"
          },
          {
            "id": "get_single_header",
            "title": "Get single header",
            "snippet": "request.getHeader(\"header_name\");",
            "example": "let token = request.getHeader(\"Authorization\");\nconsole.log(\"Token: \", token);\n\n// Response\n// Token: Bearer daf432cecwqfddf"
          },
          {
            "id": "get_multiple_headers",
            "title": "Get multiple headers",
            "snippet": "request.getHeaders(\"header_name1\", \"header_name2\",...);",
            "example": "let headers = request.getHeaders(\"Authorization\", \"Content-Type\");\nconsole.log(\"Headers:\\n\\n \", headers);\n\n/*\nResponse\n\nHeaders:\n\n{\n  \"Authorization\": \"Bearer daf432cecwqfddf\",\n  \"Content-Type\": \"application/json\"\n}\n*/"
          }
        ]
      },
      {
        "id": "params",
        "name": "Params",
        "helpPayloads": [
          {
            "id": "set_single_param",
            "title": "Set single query parameter",
            "snippet": "request.setParam(\"param_name\", \"param_value\");",
            "example": "request.setParam(\"token\", \"daf432cecwqfddf\");"
          },
          {
            "id": "set_multiple_params",
            "title": "Set multiple query parameters",
            "snippet": "request.setParams({ params_object });",
            "example": "request.setParams({\n  \"token\": \"daf432cecwqfddf\",\n  \"user\": \"pavan\"\n});"
          },
          {
            "id": "unset_multiple_or_single_params",
            "title": "Unset single/multiple query parameters",
            "snippet": "request.unsetParams(\"param_name1\", \"param_name2\",...);",
            "example": "request.unsetParams(\"token\", \"user\");"
          },
          {
            "id": "get_single_param",
            "title": "Get single query parameters",
            "snippet": "request.getParam(\"param_name\");",
            "example": "let user = request.getParam(\"user\");\nconsole.log(\"User: \", user);\n\n// Response\n// User: pavan"
          },
          {
            "id": "get_multiple_params",
            "title": "Get multiple query parameters",
            "snippet": "request.getParams(\"param_name1\", \"param_name2\",...);",
            "example": "request.setURL(\"raw_string\");let params = request.getParams(\"token\", \"user\");\nconsole.log(\"Params:\\n\\n \", params);\n\n/*\nResponse\n\nParams:\n\n{\n  \"token\": \"daf432cecwqfddf\",\n  \"user\": \"pavan\"\n}\n*/"
          }
        ]
      },
      {
        "id": "authorization",
        "name": "Authorization",
        "helpPayloads": [
          {
            "id": "set_token_as_a_query_parameter",
            "title": "Send token as a query parameter",
            "snippet": "// Token can be generate from the Auth tab \nlet token = request.getHeader(\"Authorization\");",
            "example": "// Send OAuth2 token as a query param\nlet token = request.getHeader(\"Authorization\");\n\nrequest.setParam(\"token\", token.substr(\"Bearer\".length).trim());"
          }
        ]
      },
      {
        "id": "request_body",
        "name": "Request Body",
        "helpPayloads": [
          {
            "id": "form_data_file",
            "title": "Multipart/form-data(File)[Only supported in the desktop app]",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"multipart/form-data\");  \n\nrequest.setRequestBody([{\n  key: \"\",\n  path: \"\",\n  fileType: \"\",\n  type: \"file\"\n}]);",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"multipart/form-data\");\n\nrequest.setRequestBody([{\n  key: \"error_log\",\n  path: \"/tmp/java_error_in_WEBIDE_9770.log\",\n  fileType: \"text/x-log\",\n  type: \"file\"\n}]);"
          },
          {
            "id": "form_data_key_value",
            "title": "Multipart/form-data(key: value)",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"multipart/form-data\");\n\nrequest.setRequestBody([{\n  key: \"\",\n  value: \"\",\n  type: \"text\"\n}]);",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"multipart/form-data\");\n\nrequest.setRequestBody([{\n  key: \"token\",\n  value: \"e3dsfad2fdaGe3g\",\n  type: \"text\"\n}]);"
          },
          {
            "id": "urlencoded",
            "title": "application/x-www-form-urlencoded",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/x-www-form-urlencoded\");\n\nrequest.setRequestBody({\n  \"key\": \"value\",\n  \"key1\": \"value1\"\n  .\n  .\n  \"key-n\": \"value-n\"\n});",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/x-www-form-urlencoded\");\n\nrequest.setRequestBody({\n  \"userid\": \"1\"\n});"
          },
          {
            "id": "graphql",
            "title": "GraphQL",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/json\");\n\nrequest.setRequestBody({\n  query:``,\n  variables: {}\n});",
            "example": "request.setURL(\"https://api.spacex.land/graphql\");\n\n// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/json\");\n\nrequest.setRequestBody({\n  query:`\n   query q($id: ID!) {\n    __typename\n    history(id: $id) {\n      details\n    }\n   }\n  `,\n  variables: {id: 10}\n});"
          },
          {
            "id": "json",
            "title": "JSON",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/json\");\n\nrequest.setRequestBody({ JS Object } || JSON);",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/json\");\n\nrequest.setRequestBody({\n  msg: \"Hi, there\"\n});"
          },
          {
            "id": "xml",
            "title": "XML",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/xml\");\n\nrequest.setRequestBody(\"xml body\");",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"application/xml\");\n\nrequest.setRequestBody(`<bodytype>xml</bodytype>`);"
          },
          {
            "id": "text",
            "title": "text or text/plain",
            "snippet": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"text/plain\");\n\nrequest.setRequestBody(\"text content\");",
            "example": "// optional (can set from the ui)\nrequest.setMethod(\"post\");\n\n// required\nrequest.setContentType(\"text/plain\");\n\nrequest.setRequestBody(\"Hi, there\");"
          }
        ]
      },
      {
        "id": "environment",
        "name": "Environment",
        "helpPayloads": [
          {
            "id": "get_single_variable",
            "title": "Get single variable",
            "snippet": "env.getVariable(\"var_name\");",
            "example": "env.getVariable(\"host\");"
          },
          {
            "id": "get_multiple_variables",
            "title": "Get multiple variables",
            "snippet": "env.getVariables(\"var1_name\", \"var2_name\", ...);",
            "example": "env.getVariables(\"host\", \"port_number\", ...);"
          },
          {
            "id": "set_collection_single_variable",
            "title": "Set collection single variable",
            "snippet": "env.collection.setVariable(\"var_name\", \"var_value\");",
            "example": "env.collection.setVariable(\"host\", \"localhost\");"
          },
          {
            "id": "set_collection_multiple_variables",
            "title": "Set collection multiple variables",
            "snippet": "env.collection.setVariables({ object });",
            "example": "env.collection.setVariables({\n  host: \"localhost\",\n  port: \"3000\"\n});"
          },
          {
            "id": "unset_collection_single_or_multiple_variables",
            "title": "Unset collection single/multiple variables",
            "snippet": "env.collection.unsetVariables(\"var1_name\", \"var2_name\", ...);",
            "example": "env.collection.unsetVariables(\"port\", \"host\");"
          }
        ]
      }
    ]
  }
]
